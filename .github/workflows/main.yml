name: Tests
on:
  push:
    branches: [ 'stable/*' ]
  pull_request:
    branches: [ main, 'stable/*' ]
  merge_group:
    branches: [ main ]
concurrency:
  group: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  tests:
    if: github.repository_owner == 'Qiskit-Extensions'
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.8, "3.12"]
        os: ["ubuntu-latest", "macOS-latest", "windows-latest"]
    steps:
      - name: Print Concurrency Group
        env:
          CONCURRENCY_GROUP: ${{ github.repository }}-${{ github.ref }}-${{ github.head_ref }}
        run: |
          echo -e "\033[31;1;4mConcurrency Group\033[0m"
          echo -e "$CONCURRENCY_GROUP\n"
        shell: bash
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements.txt','requirements-extras.txt','requirements-dev.txt','constraints.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}
      - name: Stestr cache
        uses: actions/cache@v4
        with:
          path: .stestr
          key: stestr-${{ runner.os }}-${{ matrix.python-version }}
          restore-keys: |
            stestr-${{ runner.os }}-
            stestr-
      - name: Install Deps
        run: python -m pip install -U tox setuptools virtualenv wheel stestr
      - name: Install and Run Tests (Windows and Linux)
        run: tox -e py
        if: runner.os != 'macOS'
      - name: Install and Run Tests (Macs only)
        run: tox -e py
        if: runner.os == 'macOS'
        env:
          TEST_TIMEOUT: 120
      - name: Clean up stestr cache
        run: stestr history remove all

  lint:
    if: github.repository_owner == 'Qiskit-Extensions'
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint-${{ hashFiles('setup.py','requirements.txt','requirements-extras.txt','requirements-dev.txt','constraints.txt') }}
      - name: Install Deps
        run: python -m pip install -U tox
      - name: Run lint
        run: tox -elint
  docs:
    if: github.repository_owner == 'Qiskit-Extensions'
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Temporary workaround for GitVersion
        shell: bash
        run: |
          git config --unset-all extensions.worktreeconfig
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('setup.py','requirements.txt','requirements-extras.txt','requirements-dev.txt','constraints.txt') }}
      - name: Install Deps
        run: |
          python -m pip install -U tox
          sudo apt-get install -y pandoc graphviz
      - name: Build Docs
        run: tox -edocs-parallel
      - name: Compress Artifacts
        run: |
          mkdir artifacts
          tar -Jcvf html_docs.tar.xz docs/_build/html
          mv html_docs.tar.xz artifacts/.
      - uses: actions/upload-artifact@v4
        with:
          name: html_docs
          path: artifacts
